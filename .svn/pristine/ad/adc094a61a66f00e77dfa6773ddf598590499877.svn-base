package com.ymca.test.controller;

import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.annotation.Resource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.boot.test.SpringApplicationConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.ymca.CoreConfig;
import com.ymca.dao.AccountDao;
import com.ymca.model.Account;
import com.ymca.model.Address;
import com.ymca.model.ContactWaiversAndTC;
import com.ymca.model.Membership;
import com.ymca.model.User;

@RunWith(SpringJUnit4ClassRunner.class)
@SpringApplicationConfiguration(classes = CoreConfig.class)
public class AccountControllerTest {

	@Resource
	AccountDao accountDao;

	@Test
	public void getAll() {
		Account userLst = accountDao.getByName("Test");
		//System.out.println("User List Size " + userLst.getAddressLine1() + "  " + userLst.getCity());
	}
	
	@Test
	public void getAccountByEmail() {
		/*Account account = accountDao.getByEmail("nikhil1@gmail.com");
		User user =  null;
		for (Iterator<User> it = account.getUser().iterator(); it.hasNext(); ) {
    		user = it.next();
				        
	    }	
		System.out.println("User List Size " + account.getAddressLine1() + "  " + account.getEmail());*/
	}
	
	@Test
	public void save() {
		Membership membership = new Membership();
    	membership.setContactName("Joseph");
    	membership.setContactPartyId("123");
    	membership.setCustomerPartyId("123");
    	//membership.setMembershipBeginDate("Date");
    	//membership.setMembershipEndDate("Date");
    	membership.setMembershipNumber("123");
    	membership.setPricingRuleId(Long.parseLong("123445522222"));
    	membership.setProductId(Long.parseLong("12213123222222"));
    	//membership.setMembershipPrice(new Double(30));
    	
        Address address = new Address();
        address.setAddress("887 bldv");
        address.setCity("San Jose");
        address.setProvince("CA");
        address.setCountry("77833");
        address.setPostalCode("77833");
        
        ContactWaiversAndTC contactWaiversAndTC = new ContactWaiversAndTC();
		contactWaiversAndTC.setContactPartyId(3L);
		contactWaiversAndTC.setCustomerPartyId(3L);
		contactWaiversAndTC.setRecordName("Joseph Alexander");
		contactWaiversAndTC.setTcDescription("Terms Desc");
		
		ContactWaiversAndTC contactWaiversAndTC1 = new ContactWaiversAndTC();
		contactWaiversAndTC1.setContactPartyId(4L);
		contactWaiversAndTC1.setCustomerPartyId(4L);
		contactWaiversAndTC1.setRecordName("Joseph Alexander 1");
		contactWaiversAndTC1.setTcDescription("Terms Desc");

		Set<User> userLst =  new HashSet<User>();
        User user = new User();
        user.setAddress(address);
        user.setContactWaiversAndTC(new HashSet<ContactWaiversAndTC>());
        user.getContactWaiversAndTC().add(contactWaiversAndTC);
        user.getContactWaiversAndTC().add(contactWaiversAndTC1);    	

        user.setUsername("jalexander");
        user.setPassword("jalexander");
        user.setConfirmPassword("jalexander");
        user.setFirstName("Joseph");
        user.setLastName("Alexander");
        user.setEmail("jalexander@gmail.com");
        user.setWebsite("http://jalexander.com");
        user.setPasswordHint("jalexander");
        
        user.setDateOfBirth(new Date());
        user.setRelationships("Account - User [OneToMany]");
        user.setAreaOfInterest("AreaOfInterest");
        user.setProfileImage("resources/img/portal_Images/joseph.jpg");
        userLst.add(user);
        
        Account account = new Account();
    	//account.setAccountId(1L);
    	account.setName("jalexander");
    	account.setAddressLine1("887 bldv");
    	account.setAddressLine2("23 Apartment");
    	account.setCity("San Jose");
    	account.setState("CA");
    	account.setCountry("77833");
    	
    	//account.setUser(new HashSet<User>());
    	//account.setUser(userLst);	
    	//account.setMembership(membership);
    	account.setEmail("jalexander@gmail.com");
    	
    	//Account acc = accountDao.saveAndFlush(account);
    	//System.out.println(acc.getName());
	}
}
