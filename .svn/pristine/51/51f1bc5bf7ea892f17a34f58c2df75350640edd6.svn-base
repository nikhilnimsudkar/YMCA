package com.serene.job.scheduler;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.batch.core.Job;
import org.springframework.batch.core.JobExecution;
import org.springframework.batch.core.JobParameters;
import org.springframework.batch.core.JobParametersBuilder;
import org.springframework.beans.factory.InitializingBean;
import org.springframework.util.Assert;

public class GenericJobScheduler extends AbstractJobScheduler implements InitializingBean {
	private Logger log =LoggerFactory.getLogger(GenericJobScheduler.class); 
	
	@Override
	public void run() {
		try {
			JobParameters param = new JobParametersBuilder().addString("timestamp="+System.currentTimeMillis(),jobParameters).toJobParameters();
			Job job = (Job) applicationContext.getBean(jobName);
			JobExecution execution = jobLauncher.run(job, param);
			System.out.println("Exit Status : " + execution.getStatus());
		} catch (Exception e) {
			log.error("Error while running the job ", e);
		}
	}

	@Override
	public void afterPropertiesSet() throws Exception {
		Assert.notNull(jobName, "A job name is required");
	}
}