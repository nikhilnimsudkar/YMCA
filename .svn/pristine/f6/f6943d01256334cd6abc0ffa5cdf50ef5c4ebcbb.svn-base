package com.ymca.model;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;


/**
 * This class represents the basic "Payment" object in YMCA Portal that allows for Payment process management.  
 */
@Entity
@Table(name = "payment")
public class Payment extends BaseObject implements Serializable {
	private static final long serialVersionUID = -3202944701848397747L;

	public Payment(){
    }

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
    private Long paymentId;

    @Column(name = "account_id", nullable = false)
	private Long accountId;	
    
    @Column(name = "payment_type")
   	private String paymentType;                    	
    
    @Column(name = "card_number", nullable = false)
    private String cardNumber;
    
    @Column(name = "expiration_month", nullable = false)
    private Integer expirationMonth;

    @Column(name = "expiration_year", nullable = false)
    private Integer expirationYear;
    
    @Column(name = "full_name", nullable = false)
    private String fullName;
    
    @Column(name = "billing_address_line1", nullable = false)
    private String billingAddressLine1;                
    
    @Column(name = "billing_address_line2", nullable = false)
    private String billingAddressLine2;
    
    @Column(name = "billing_city", nullable = false)
    private String billingCity;
    
    @Column(name = "billing_state", nullable = false)
    private String billingState;
    
    @Column(name = "billing_country", nullable = false)
    private String billingCountry;
    
    @Column(name = "is_Primary")
    private Integer isPrimary;

    @Column(name = "status")
    private Integer status;

	/**
	 * @return the paymentId
	 */
	public Long getPaymentId() {
		return paymentId;
	}

	/**
	 * @param paymentId the paymentId to set
	 */
	public void setPaymentId(Long paymentId) {
		this.paymentId = paymentId;
	}

	/**
	 * @return the accountId
	 */
	public Long getAccountId() {
		return accountId;
	}

	/**
	 * @param accountId the accountId to set
	 */
	public void setAccountId(Long accountId) {
		this.accountId = accountId;
	}

	/**
	 * @return the paymentType
	 */
	public String getPaymentType() {
		return paymentType;
	}

	/**
	 * @param paymentType the paymentType to set
	 */
	public void setPaymentType(String paymentType) {
		this.paymentType = paymentType;
	}

	/**
	 * @return the cardNumber
	 */
	public String getCardNumber() {
		return cardNumber;
	}

	/**
	 * @param cardNumber the cardNumber to set
	 */
	public void setCardNumber(String cardNumber) {
		this.cardNumber = cardNumber;
	}

	/**
	 * @return the expirationMonth
	 */
	public Integer getExpirationMonth() {
		return expirationMonth;
	}

	/**
	 * @param expirationMonth the expirationMonth to set
	 */
	public void setExpirationMonth(Integer expirationMonth) {
		this.expirationMonth = expirationMonth;
	}

	/**
	 * @return the expirationYear
	 */
	public Integer getExpirationYear() {
		return expirationYear;
	}

	/**
	 * @param expirationYear the expirationYear to set
	 */
	public void setExpirationYear(Integer expirationYear) {
		this.expirationYear = expirationYear;
	}

	/**
	 * @return the fullName
	 */
	public String getFullName() {
		return fullName;
	}

	/**
	 * @param fullName the fullName to set
	 */
	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	/**
	 * @return the billingAddressLine1
	 */
	public String getBillingAddressLine1() {
		return billingAddressLine1;
	}

	/**
	 * @param billingAddressLine1 the billingAddressLine1 to set
	 */
	public void setBillingAddressLine1(String billingAddressLine1) {
		this.billingAddressLine1 = billingAddressLine1;
	}

	/**
	 * @return the billingAddressLine2
	 */
	public String getBillingAddressLine2() {
		return billingAddressLine2;
	}

	/**
	 * @param billingAddressLine2 the billingAddressLine2 to set
	 */
	public void setBillingAddressLine2(String billingAddressLine2) {
		this.billingAddressLine2 = billingAddressLine2;
	}

	/**
	 * @return the billingCity
	 */
	public String getBillingCity() {
		return billingCity;
	}

	/**
	 * @param billingCity the billingCity to set
	 */
	public void setBillingCity(String billingCity) {
		this.billingCity = billingCity;
	}

	/**
	 * @return the billingState
	 */
	public String getBillingState() {
		return billingState;
	}

	/**
	 * @param billingState the billingState to set
	 */
	public void setBillingState(String billingState) {
		this.billingState = billingState;
	}

	/**
	 * @return the billingCountry
	 */
	public String getBillingCountry() {
		return billingCountry;
	}

	/**
	 * @param billingCountry the billingCountry to set
	 */
	public void setBillingCountry(String billingCountry) {
		this.billingCountry = billingCountry;
	}

	/**
	 * @return the isPrimary
	 */
	public Integer getIsPrimary() {
		return isPrimary;
	}

	/**
	 * @param isPrimary the isPrimary to set
	 */
	public void setIsPrimary(Integer isPrimary) {
		this.isPrimary = isPrimary;
	}

	/**
	 * @return the status
	 */
	public Integer getStatus() {
		return status;
	}

	/**
	 * @param status the status to set
	 */
	public void setStatus(Integer status) {
		this.status = status;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((accountId == null) ? 0 : accountId.hashCode());
		result = prime
				* result
				+ ((billingAddressLine1 == null) ? 0 : billingAddressLine1
						.hashCode());
		result = prime
				* result
				+ ((billingAddressLine2 == null) ? 0 : billingAddressLine2
						.hashCode());
		result = prime * result
				+ ((billingCity == null) ? 0 : billingCity.hashCode());
		result = prime * result
				+ ((billingCountry == null) ? 0 : billingCountry.hashCode());
		result = prime * result
				+ ((billingState == null) ? 0 : billingState.hashCode());
		result = prime * result
				+ ((cardNumber == null) ? 0 : cardNumber.hashCode());
		result = prime * result
				+ ((expirationMonth == null) ? 0 : expirationMonth.hashCode());
		result = prime * result
				+ ((expirationYear == null) ? 0 : expirationYear.hashCode());
		result = prime * result
				+ ((fullName == null) ? 0 : fullName.hashCode());
		result = prime * result
				+ ((isPrimary == null) ? 0 : isPrimary.hashCode());
		result = prime * result
				+ ((paymentId == null) ? 0 : paymentId.hashCode());
		result = prime * result
				+ ((paymentType == null) ? 0 : paymentType.hashCode());
		result = prime * result + ((status == null) ? 0 : status.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Payment other = (Payment) obj;
		if (accountId == null) {
			if (other.accountId != null)
				return false;
		} else if (!accountId.equals(other.accountId))
			return false;
		if (billingAddressLine1 == null) {
			if (other.billingAddressLine1 != null)
				return false;
		} else if (!billingAddressLine1.equals(other.billingAddressLine1))
			return false;
		if (billingAddressLine2 == null) {
			if (other.billingAddressLine2 != null)
				return false;
		} else if (!billingAddressLine2.equals(other.billingAddressLine2))
			return false;
		if (billingCity == null) {
			if (other.billingCity != null)
				return false;
		} else if (!billingCity.equals(other.billingCity))
			return false;
		if (billingCountry == null) {
			if (other.billingCountry != null)
				return false;
		} else if (!billingCountry.equals(other.billingCountry))
			return false;
		if (billingState == null) {
			if (other.billingState != null)
				return false;
		} else if (!billingState.equals(other.billingState))
			return false;
		if (cardNumber == null) {
			if (other.cardNumber != null)
				return false;
		} else if (!cardNumber.equals(other.cardNumber))
			return false;
		if (expirationMonth == null) {
			if (other.expirationMonth != null)
				return false;
		} else if (!expirationMonth.equals(other.expirationMonth))
			return false;
		if (expirationYear == null) {
			if (other.expirationYear != null)
				return false;
		} else if (!expirationYear.equals(other.expirationYear))
			return false;
		if (fullName == null) {
			if (other.fullName != null)
				return false;
		} else if (!fullName.equals(other.fullName))
			return false;
		if (isPrimary == null) {
			if (other.isPrimary != null)
				return false;
		} else if (!isPrimary.equals(other.isPrimary))
			return false;
		if (paymentId == null) {
			if (other.paymentId != null)
				return false;
		} else if (!paymentId.equals(other.paymentId))
			return false;
		if (paymentType == null) {
			if (other.paymentType != null)
				return false;
		} else if (!paymentType.equals(other.paymentType))
			return false;
		if (status == null) {
			if (other.status != null)
				return false;
		} else if (!status.equals(other.status))
			return false;
		return true;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "Payment [paymentId=" + paymentId + ", accountId=" + accountId
				+ ", paymentType=" + paymentType + ", cardNumber=" + cardNumber
				+ ", expirationMonth=" + expirationMonth + ", expirationYear="
				+ expirationYear + ", fullName=" + fullName
				+ ", billingAddressLine1=" + billingAddressLine1
				+ ", billingAddressLine2=" + billingAddressLine2
				+ ", billingCity=" + billingCity + ", billingState="
				+ billingState + ", billingCountry=" + billingCountry
				+ ", isPrimary=" + isPrimary + ", status=" + status
				+ ", getPaymentId()=" + getPaymentId() + ", getAccountId()="
				+ getAccountId() + ", getPaymentType()=" + getPaymentType()
				+ ", getCardNumber()=" + getCardNumber()
				+ ", getExpirationMonth()=" + getExpirationMonth()
				+ ", getExpirationYear()=" + getExpirationYear()
				+ ", getFullName()=" + getFullName()
				+ ", getBillingAddressLine1()=" + getBillingAddressLine1()
				+ ", getBillingAddressLine2()=" + getBillingAddressLine2()
				+ ", getBillingCity()=" + getBillingCity()
				+ ", getBillingState()=" + getBillingState()
				+ ", getBillingCountry()=" + getBillingCountry()
				+ ", getIsPrimary()=" + getIsPrimary() + ", getStatus()="
				+ getStatus() + "]";
	}
}
