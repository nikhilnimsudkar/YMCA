package com.ymca.web.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import net.sf.json.JSONArray;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ymca.dao.ItemDetailDao;
import com.ymca.dao.ItemDetailPricingRuleDao;
import com.ymca.dao.PricingRuleDao;
import com.ymca.model.ItemDetailAssociatedItemDetail;
import com.ymca.model.ItemDetailPricingRule;
import com.ymca.model.PricingRule;
import com.ymca.web.util.Constants;

@Controller
public class CampController extends BaseController {

	@Resource
	private ItemDetailDao itemDetailDao ; 
	
	@Resource
	private ItemDetailPricingRuleDao  itemDetailPricingRuleDao ;
	
	@RequestMapping(value="/sc/agent/getItemActivityAndTransportService",method = RequestMethod.GET)
	public @ResponseBody List<Map<String,Object>> getCampActivities(String itemDetailId,String[] cName) throws Exception {
	
		List<Long> ids = new ArrayList<Long>();
		String[] itemDetailIds = itemDetailId.split(",");
		for (String i : itemDetailIds) {
			ids.add(Long.parseLong(i));
		}
		List<String> types = new ArrayList<String>();
		types.add("Activity");
		types.add("Transportation");
		List<ItemDetailAssociatedItemDetail> objs = itemDetailDao.findAssociatedItemDetailTypeAndItemDetailId(types,ids);
		List<Map<String, Object>> resp = new ArrayList<Map<String,Object>>();
		
		for (ItemDetailAssociatedItemDetail o: objs) {
			for (String c : cName) {
				Map<String,Object> r= new HashMap<String, Object>();
				
				// set common fields 
				r.put("id", c  + "" +o.getId());
				r.put("cName", c);
				r.put("parentItemId", o.getItemDetailId());
				r.put("associatedItemId", o.getAssociatedItemDetailId());
				
				// set activity related fields 
				r.put("type", o.getType());
				r.put("name", o.getRecordName());
				r.put("priority", o.getActivityPriority());
				r.put("type", o.getType());
				
				// set transport related fields

				
				r.put("location", "Location 1");
				r.put("serviceType", "Airport");
				r.put("direction", "DROPOFF");
				r.put("startDate", "2015-03-13");
				r.put("startTime", "11:12:11");
				r.put("endDate", "2015-03-13");
				r.put("endTime", "2015-03-13");

				
/*				r.put("location", o.getAssociatedItemDetail().getLocation().getRecordName());
				r.put("serviceType", o.getAssociatedItemDetail().getSubCategory());
				r.put("direction", o.getAssociatedItemDetail().getDirection());
				r.put("startDate", o.getAssociatedItemDetail().getStartDate());
				r.put("startTime", o.getAssociatedItemDetail().getStartTime());
				r.put("endDate", o.getAssociatedItemDetail().getEndDate());
				r.put("endTime", o.getAssociatedItemDetail().getEndTime());
*/
				// TODO need to refactor this and combine into single query to fetch item details and associated pricing rules
				/*List<ItemDetailPricingRule> lstPricingrule = itemDetailPricingRuleDao.findByItemDetailIdAndPricingRule_TypeAndPricingRule_ProductCategory(o.getAssociatedItemDetail().getId(),Constants.SIGNUP,Constants.ITEM_TYPE_TRANSPORTATION);
				if (lstPricingrule != null && !lstPricingrule.isEmpty()) {
					
				}*/
				r.put("agreed", false);
				r.put("memberPrice", 20);
				r.put("nonmemberprice", 25);
				r.put("flightName", "");
				r.put("flightTime", "");
				
				resp.add(r);	
			}
		}
		
		return resp ;
	}
	
	@RequestMapping(value="/sc/agent/testActivityAndTransportService",method = RequestMethod.GET)
	public String testActivityAndTransportService(String itemDetailId) throws Exception {
		return "testActivityAndTransportServicePage" ;
	}
}
