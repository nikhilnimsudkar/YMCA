package com.ymca.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;



/**
 * This class represents the basic "Membership" object in YMCA Portal that allows for Membership management.  
 *
 */
@Entity
@Table(name = "account")
public class Account extends BaseObject implements Serializable {
    private static final long serialVersionUID = 3832626162173359411L;
    

	public Account(){
    	
    }

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)    
    private Long accountId;					// required  PK
    
	@Column(name = "name", nullable = false)
   	private String name;                    	
    
    @Column(name = "AddressLine1", nullable = false)
    private String addressLine1;                
    
    @Column(name = "AddressLine2")
    private String addressLine2;
    
    @Column(name = "City", nullable = false)
    private String city;
    
    @Column(name = "State", nullable = false)
    private String state;
    
    @Column(name = "Country",columnDefinition=" default 'US'")
    private String country;    
    
    @Column(name = "email", nullable = false)
   	private String email;  
    
    @Column(name = "PostalCode")
    private String postalCode;
    
    @Column(name = "PartyId")
    private Long PartyId ;
    
    @Column(name = "Location_c")
    private String location ;
    
    @Column(name = "reset_password", columnDefinition="boolean default false")
   	private boolean resetPassword;  
    @Column(name = "token")
   	private String token;  
    @Column(name = "sentdate", columnDefinition="DATETIME")
   	private Date sentdate;  
    @Column(name = "passwordresetdate", columnDefinition="DATETIME")
   	private Date passwordresetdate;  
    
    @Column(name = "CustomerType_c")
   	private String customerType; 
    
    @Transient
    private Long usrId;  
    
    @Transient
    private String username;                  
	
    @Transient
    private String password;                  
	
    @Transient
    private String passwordHint;
	
    @Transient
    private String firstName;                   
	
    @Transient
    private String lastName;                    
    
    @Transient
    private String phoneNumber;
    
    @Transient
    private String homeNumber;
    
    @Transient
    private String workNumber;
	
    @Transient
    private Date dateOfBirth;	
    
    @Transient
    private String website;
    
    @Transient
    private String tcDescription;   
    
    @Transient
    private String transId;
    
    @Transient
    private String joiningFee;
    
    @Transient
    private String productPrice;
    
    @Transient
    private String locationId;
    
    @Transient
    private String signUpProductType;    
    
    @Transient
    private String membershipFrequency;
    
    @Transient
    private String itemDetailsId;
    
    @Transient
    private String expirationMonth;
    
    @Transient
    private String expirationYear;
    
    @Transient
    private String nickName;
    
    @Transient
    private String loggedInUserEmailId;
    
    @Transient
    private String savePayment;
    
    @Transient
    private String gender;
    //@OneToOne
    //private Contact contact;
    
    /*@OneToMany(cascade={CascadeType.ALL})
	@JoinColumn(name="accountId")
	@IndexColumn(name="idx")
    private Set<Contact> contact = new HashSet<Contact>(0);*/
    
    //@OneToMany(cascade={CascadeType.ALL})
    //@JoinColumn(name="accountId")
    //private Set<User> user = new HashSet<User>(0);
    
    @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
    @JoinColumn(name = "accountId")
    private Set<User> user = new HashSet<User>(0);
    
    @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
    @JoinColumn(name = "accountId")
    private List<Activity> interactions = new ArrayList<Activity>();
    
    @Transient
    private List<User> userLst = new ArrayList<>();
    
    @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
    @JoinColumn(name = "accountId")
    private List<PaymentMethod> paymentMethod = new ArrayList<PaymentMethod>();
    
    @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
    @JoinColumn(name = "accountId")
    private List<Donation> donation = new ArrayList<Donation>();

    @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
    @JoinColumn(name = "accountId")
    private List<Payment> payment = new ArrayList<Payment>();
    
    @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
    @JoinColumn(name = "accountId")
    private List<Signup> signup = new ArrayList<Signup>();
    
    @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
    @JoinColumn(name = "accountId")
    private List<Invoice> invoice = new ArrayList<Invoice>();
    
    @Transient
    private String productId;
    
    @Transient
    private String paymentMethodId;
    
    private Calendar lastUpdated;
    

	public List<Payment> getPayment() {
		return payment;
	}

	public void setPayment(List<Payment> payment) {
		this.payment = payment;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getAddressLine1() {
		return addressLine1;
	}

	public void setAddressLine1(String addressLine1) {
		this.addressLine1 = addressLine1;
	}

	public String getAddressLine2() {
		return addressLine2;
	}

	public void setAddressLine2(String addressLine2) {
		this.addressLine2 = addressLine2;
	}

	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	public String getState() {
		return state;
	}

	public void setState(String state) {
		this.state = state;
	}

	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public Long getAccountId() {
		return accountId;
	}

	public void setAccountId(Long accountId) {
		this.accountId = accountId;
	}

	public Long getUsrId() {
		return usrId;
	}

	public void setUsrId(Long usrId) {
		this.usrId = usrId;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getPasswordHint() {
		return passwordHint;
	}

	public void setPasswordHint(String passwordHint) {
		this.passwordHint = passwordHint;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getPostalCode() {
		return postalCode;
	}

	public void setPostalCode(String postalCode) {
		this.postalCode = postalCode;
	}

	public boolean isResetPassword() {
		return resetPassword;
	}

	public void setResetPassword(boolean resetPassword) {
		this.resetPassword = resetPassword;
	}

	public String getToken() {
		return token;
	}

	public void setToken(String token) {
		this.token = token;
	}

	public Date getSentdate() {
		return sentdate;
	}

	public void setSentdate(Date sentdate) {
		this.sentdate = sentdate;
	}

	public Date getPasswordresetdate() {
		return passwordresetdate;
	}

	public void setPasswordresetdate(Date passwordresetdate) {
		this.passwordresetdate = passwordresetdate;
	}

	public String getPhoneNumber() {
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	public String getHomeNumber() {
		return homeNumber;
	}

	public void setHomeNumber(String homeNumber) {
		this.homeNumber = homeNumber;
	}

	public String getWorkNumber() {
		return workNumber;
	}

	public void setWorkNumber(String workNumber) {
		this.workNumber = workNumber;
	}

	public Date getDateOfBirth() {
		return dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	public String getWebsite() {
		return website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	public String getTcDescription() {
		return tcDescription;
	}

	public void setTcDescription(String tcDescription) {
		this.tcDescription = tcDescription;
	}

	/*public Set<User> getUser() {
		return user;
	}

	public void setUser(Set<User> user) {
		this.user = user;
	}*/

	public Set<User> getUser() {
		return user;
	}

	public void setUser(Set<User> user) {
		this.user = user;
	}

	public List<User> getUserLst() {
		return userLst;
	}

	public void setUserLst(List<User> userLst) {
		this.userLst = userLst;
	}

	

	public List<Activity> getInteractions() {
		return interactions;
	}

	public void setInteractions(List<Activity> interactions) {
		this.interactions = interactions;
	}

	public List<PaymentMethod> getPaymentMethod() {
		return paymentMethod;
	}

	public void setPaymentMethod(List<PaymentMethod> paymentMethod) {
		this.paymentMethod = paymentMethod;
	}

	public List<Donation> getDonation() {
		return donation;
	}

	public void setDonation(List<Donation> donation) {
		this.donation = donation;
	}

	public List<Signup> getSignup() {
		return signup;
	}

	public void setSignup(List<Signup> signup) {
		this.signup = signup;
	}

	public String getProductId() {
		return productId;
	}

	public void setProductId(String productId) {
		this.productId = productId;
	}

	public String getPaymentMethodId() {
		return paymentMethodId;
	}

	public void setPaymentMethodId(String paymentMethodId) {
		this.paymentMethodId = paymentMethodId;
	}

	public String getTransId() {
		return transId;
	}

	public void setTransId(String transId) {
		this.transId = transId;
	}

	public String getJoiningFee() {
		return joiningFee;
	}

	public void setJoiningFee(String joiningFee) {
		this.joiningFee = joiningFee;
	}

	public String getProductPrice() {
		return productPrice;
	}

	public void setProductPrice(String productPrice) {
		this.productPrice = productPrice;
	}

	public String getSignUpProductType() {
		return signUpProductType;
	}

	public void setSignUpProductType(String signUpProductType) {
		this.signUpProductType = signUpProductType;
	}

	@Override
	public String toString() {
		return "Account [accountId=" + accountId + ", name=" + name
				+ ", addressLine1=" + addressLine1 + ", addressLine2="
				+ addressLine2 + ", city=" + city + ", state=" + state
				+ ", country=" + country + ", email=" + email + ", postalCode="
				+ postalCode + ", PartyId=" + PartyId + ", location="
				+ location + ", resetPassword=" + resetPassword + ", token="
				+ token + ", sentdate=" + sentdate + ", passwordresetdate="
				+ passwordresetdate + ", customerType=" + customerType
				+ ", usrId=" + usrId + ", username=" + username + ", password="
				+ password + ", passwordHint=" + passwordHint + ", firstName="
				+ firstName + ", lastName=" + lastName + ", phoneNumber="
				+ phoneNumber + ", homeNumber=" + homeNumber + ", workNumber="
				+ workNumber + ", dateOfBirth=" + dateOfBirth + ", website="
				+ website + ", tcDescription=" + tcDescription + ", transId="
				+ transId + ", joiningFee=" + joiningFee + ", productPrice="
				+ productPrice + ", locationId=" + locationId
				+ ", signUpProductType=" + signUpProductType
				+ ", membershipFrequency=" + membershipFrequency
				+ ", itemDetailsId=" + itemDetailsId + ", expirationMonth="
				+ expirationMonth + ", expirationYear=" + expirationYear
				+ ", nickName=" + nickName + ", loggedInUserEmailId="
				+ loggedInUserEmailId + ", savePayment=" + savePayment
				+ ", gender=" + gender + ", user=" + user + ", interactions="
				+ interactions + ", userLst=" + userLst + ", paymentMethod="
				+ paymentMethod + ", donation=" + donation + ", payment="
				+ payment + ", signup=" + signup + ", invoice=" + invoice
				+ ", productId=" + productId + ", paymentMethodId="
				+ paymentMethodId + ", lastUpdated=" + lastUpdated + "]";
	}
	
	public String getMembershipFrequency() {
		return membershipFrequency;
	}

	public void setMembershipFrequency(String membershipFrequency) {
		this.membershipFrequency = membershipFrequency;
	}

	public String getItemDetailsId() {
		return itemDetailsId;
	}

	public void setItemDetailsId(String itemDetailsId) {
		this.itemDetailsId = itemDetailsId;
	}

	public String getLoggedInUserEmailId() {
		return loggedInUserEmailId;
	}

	public void setLoggedInUserEmailId(String loggedInUserEmailId) {
		this.loggedInUserEmailId = loggedInUserEmailId;
	}

	public String getExpirationMonth() {
		return expirationMonth;
	}

	public void setExpirationMonth(String expirationMonth) {
		this.expirationMonth = expirationMonth;
	}

	public String getExpirationYear() {
		return expirationYear;
	}

	public void setExpirationYear(String expirationYear) {
		this.expirationYear = expirationYear;
	}

	public String getNickName() {
		return nickName;
	}

	public void setNickName(String nickName) {
		this.nickName = nickName;
	}



	public String getLocationId() {
		return locationId;
	}

	public void setLocationId(String locationId) {
		this.locationId = locationId;
	}

	public Long getPartyId() {
		return PartyId;
	}

	public void setPartyId(Long partyId) {
		PartyId = partyId;
	}

	public String getLocation_c() {
		return location;
	}

	public void setLocation_c(String location_c) {
		location_c = location_c;
	}

	public List<Invoice> getInvoice() {
		return invoice;
	}

	public void setInvoice(List<Invoice> invoice) {
		this.invoice = invoice;
	}

	public String getSavePayment() {
		return savePayment;
	}

	public void setSavePayment(String savePayment) {
		this.savePayment = savePayment;
	}
	

	public Calendar getLastUpdated() {
		return lastUpdated;
	}

	public void setLastUpdated(Calendar lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	public String getCustomerType() {
		return customerType;
	}

	public void setCustomerType(String customerType) {
		this.customerType = customerType;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((PartyId == null) ? 0 : PartyId.hashCode());
		result = prime * result
				+ ((accountId == null) ? 0 : accountId.hashCode());
		result = prime * result
				+ ((addressLine1 == null) ? 0 : addressLine1.hashCode());
		result = prime * result
				+ ((addressLine2 == null) ? 0 : addressLine2.hashCode());
		result = prime * result + ((city == null) ? 0 : city.hashCode());
		result = prime * result + ((country == null) ? 0 : country.hashCode());
		result = prime * result
				+ ((customerType == null) ? 0 : customerType.hashCode());
		result = prime * result
				+ ((dateOfBirth == null) ? 0 : dateOfBirth.hashCode());
		result = prime * result
				+ ((donation == null) ? 0 : donation.hashCode());
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result
				+ ((expirationMonth == null) ? 0 : expirationMonth.hashCode());
		result = prime * result
				+ ((expirationYear == null) ? 0 : expirationYear.hashCode());
		result = prime * result
				+ ((firstName == null) ? 0 : firstName.hashCode());
		result = prime * result + ((gender == null) ? 0 : gender.hashCode());
		result = prime * result
				+ ((homeNumber == null) ? 0 : homeNumber.hashCode());
		result = prime * result
				+ ((interactions == null) ? 0 : interactions.hashCode());
		result = prime * result + ((invoice == null) ? 0 : invoice.hashCode());
		result = prime * result
				+ ((itemDetailsId == null) ? 0 : itemDetailsId.hashCode());
		result = prime * result
				+ ((joiningFee == null) ? 0 : joiningFee.hashCode());
		result = prime * result
				+ ((lastName == null) ? 0 : lastName.hashCode());
		result = prime * result
				+ ((lastUpdated == null) ? 0 : lastUpdated.hashCode());
		result = prime * result
				+ ((location == null) ? 0 : location.hashCode());
		result = prime * result
				+ ((locationId == null) ? 0 : locationId.hashCode());
		result = prime
				* result
				+ ((loggedInUserEmailId == null) ? 0 : loggedInUserEmailId
						.hashCode());
		result = prime
				* result
				+ ((membershipFrequency == null) ? 0 : membershipFrequency
						.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result
				+ ((nickName == null) ? 0 : nickName.hashCode());
		result = prime * result
				+ ((password == null) ? 0 : password.hashCode());
		result = prime * result
				+ ((passwordHint == null) ? 0 : passwordHint.hashCode());
		result = prime
				* result
				+ ((passwordresetdate == null) ? 0 : passwordresetdate
						.hashCode());
		result = prime * result + ((payment == null) ? 0 : payment.hashCode());
		result = prime * result
				+ ((paymentMethod == null) ? 0 : paymentMethod.hashCode());
		result = prime * result
				+ ((paymentMethodId == null) ? 0 : paymentMethodId.hashCode());
		result = prime * result
				+ ((phoneNumber == null) ? 0 : phoneNumber.hashCode());
		result = prime * result
				+ ((postalCode == null) ? 0 : postalCode.hashCode());
		result = prime * result
				+ ((productId == null) ? 0 : productId.hashCode());
		result = prime * result
				+ ((productPrice == null) ? 0 : productPrice.hashCode());
		result = prime * result + (resetPassword ? 1231 : 1237);
		result = prime * result
				+ ((savePayment == null) ? 0 : savePayment.hashCode());
		result = prime * result
				+ ((sentdate == null) ? 0 : sentdate.hashCode());
		result = prime
				* result
				+ ((signUpProductType == null) ? 0 : signUpProductType
						.hashCode());
		result = prime * result + ((signup == null) ? 0 : signup.hashCode());
		result = prime * result + ((state == null) ? 0 : state.hashCode());
		result = prime * result
				+ ((tcDescription == null) ? 0 : tcDescription.hashCode());
		result = prime * result + ((token == null) ? 0 : token.hashCode());
		result = prime * result + ((transId == null) ? 0 : transId.hashCode());
		result = prime * result + ((user == null) ? 0 : user.hashCode());
		result = prime * result + ((userLst == null) ? 0 : userLst.hashCode());
		result = prime * result
				+ ((username == null) ? 0 : username.hashCode());
		result = prime * result + ((usrId == null) ? 0 : usrId.hashCode());
		result = prime * result + ((website == null) ? 0 : website.hashCode());
		result = prime * result
				+ ((workNumber == null) ? 0 : workNumber.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Account other = (Account) obj;
		if (PartyId == null) {
			if (other.PartyId != null)
				return false;
		} else if (!PartyId.equals(other.PartyId))
			return false;
		if (accountId == null) {
			if (other.accountId != null)
				return false;
		} else if (!accountId.equals(other.accountId))
			return false;
		if (addressLine1 == null) {
			if (other.addressLine1 != null)
				return false;
		} else if (!addressLine1.equals(other.addressLine1))
			return false;
		if (addressLine2 == null) {
			if (other.addressLine2 != null)
				return false;
		} else if (!addressLine2.equals(other.addressLine2))
			return false;
		if (city == null) {
			if (other.city != null)
				return false;
		} else if (!city.equals(other.city))
			return false;
		if (country == null) {
			if (other.country != null)
				return false;
		} else if (!country.equals(other.country))
			return false;
		if (customerType == null) {
			if (other.customerType != null)
				return false;
		} else if (!customerType.equals(other.customerType))
			return false;
		if (dateOfBirth == null) {
			if (other.dateOfBirth != null)
				return false;
		} else if (!dateOfBirth.equals(other.dateOfBirth))
			return false;
		if (donation == null) {
			if (other.donation != null)
				return false;
		} else if (!donation.equals(other.donation))
			return false;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (expirationMonth == null) {
			if (other.expirationMonth != null)
				return false;
		} else if (!expirationMonth.equals(other.expirationMonth))
			return false;
		if (expirationYear == null) {
			if (other.expirationYear != null)
				return false;
		} else if (!expirationYear.equals(other.expirationYear))
			return false;
		if (firstName == null) {
			if (other.firstName != null)
				return false;
		} else if (!firstName.equals(other.firstName))
			return false;
		if (gender == null) {
			if (other.gender != null)
				return false;
		} else if (!gender.equals(other.gender))
			return false;
		if (homeNumber == null) {
			if (other.homeNumber != null)
				return false;
		} else if (!homeNumber.equals(other.homeNumber))
			return false;
		if (interactions == null) {
			if (other.interactions != null)
				return false;
		} else if (!interactions.equals(other.interactions))
			return false;
		if (invoice == null) {
			if (other.invoice != null)
				return false;
		} else if (!invoice.equals(other.invoice))
			return false;
		if (itemDetailsId == null) {
			if (other.itemDetailsId != null)
				return false;
		} else if (!itemDetailsId.equals(other.itemDetailsId))
			return false;
		if (joiningFee == null) {
			if (other.joiningFee != null)
				return false;
		} else if (!joiningFee.equals(other.joiningFee))
			return false;
		if (lastName == null) {
			if (other.lastName != null)
				return false;
		} else if (!lastName.equals(other.lastName))
			return false;
		if (lastUpdated == null) {
			if (other.lastUpdated != null)
				return false;
		} else if (!lastUpdated.equals(other.lastUpdated))
			return false;
		if (location == null) {
			if (other.location != null)
				return false;
		} else if (!location.equals(other.location))
			return false;
		if (locationId == null) {
			if (other.locationId != null)
				return false;
		} else if (!locationId.equals(other.locationId))
			return false;
		if (loggedInUserEmailId == null) {
			if (other.loggedInUserEmailId != null)
				return false;
		} else if (!loggedInUserEmailId.equals(other.loggedInUserEmailId))
			return false;
		if (membershipFrequency == null) {
			if (other.membershipFrequency != null)
				return false;
		} else if (!membershipFrequency.equals(other.membershipFrequency))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (nickName == null) {
			if (other.nickName != null)
				return false;
		} else if (!nickName.equals(other.nickName))
			return false;
		if (password == null) {
			if (other.password != null)
				return false;
		} else if (!password.equals(other.password))
			return false;
		if (passwordHint == null) {
			if (other.passwordHint != null)
				return false;
		} else if (!passwordHint.equals(other.passwordHint))
			return false;
		if (passwordresetdate == null) {
			if (other.passwordresetdate != null)
				return false;
		} else if (!passwordresetdate.equals(other.passwordresetdate))
			return false;
		if (payment == null) {
			if (other.payment != null)
				return false;
		} else if (!payment.equals(other.payment))
			return false;
		if (paymentMethod == null) {
			if (other.paymentMethod != null)
				return false;
		} else if (!paymentMethod.equals(other.paymentMethod))
			return false;
		if (paymentMethodId == null) {
			if (other.paymentMethodId != null)
				return false;
		} else if (!paymentMethodId.equals(other.paymentMethodId))
			return false;
		if (phoneNumber == null) {
			if (other.phoneNumber != null)
				return false;
		} else if (!phoneNumber.equals(other.phoneNumber))
			return false;
		if (postalCode == null) {
			if (other.postalCode != null)
				return false;
		} else if (!postalCode.equals(other.postalCode))
			return false;
		if (productId == null) {
			if (other.productId != null)
				return false;
		} else if (!productId.equals(other.productId))
			return false;
		if (productPrice == null) {
			if (other.productPrice != null)
				return false;
		} else if (!productPrice.equals(other.productPrice))
			return false;
		if (resetPassword != other.resetPassword)
			return false;
		if (savePayment == null) {
			if (other.savePayment != null)
				return false;
		} else if (!savePayment.equals(other.savePayment))
			return false;
		if (sentdate == null) {
			if (other.sentdate != null)
				return false;
		} else if (!sentdate.equals(other.sentdate))
			return false;
		if (signUpProductType == null) {
			if (other.signUpProductType != null)
				return false;
		} else if (!signUpProductType.equals(other.signUpProductType))
			return false;
		if (signup == null) {
			if (other.signup != null)
				return false;
		} else if (!signup.equals(other.signup))
			return false;
		if (state == null) {
			if (other.state != null)
				return false;
		} else if (!state.equals(other.state))
			return false;
		if (tcDescription == null) {
			if (other.tcDescription != null)
				return false;
		} else if (!tcDescription.equals(other.tcDescription))
			return false;
		if (token == null) {
			if (other.token != null)
				return false;
		} else if (!token.equals(other.token))
			return false;
		if (transId == null) {
			if (other.transId != null)
				return false;
		} else if (!transId.equals(other.transId))
			return false;
		if (user == null) {
			if (other.user != null)
				return false;
		} else if (!user.equals(other.user))
			return false;
		if (userLst == null) {
			if (other.userLst != null)
				return false;
		} else if (!userLst.equals(other.userLst))
			return false;
		if (username == null) {
			if (other.username != null)
				return false;
		} else if (!username.equals(other.username))
			return false;
		if (usrId == null) {
			if (other.usrId != null)
				return false;
		} else if (!usrId.equals(other.usrId))
			return false;
		if (website == null) {
			if (other.website != null)
				return false;
		} else if (!website.equals(other.website))
			return false;
		if (workNumber == null) {
			if (other.workNumber != null)
				return false;
		} else if (!workNumber.equals(other.workNumber))
			return false;
		return true;
	}
	
}
